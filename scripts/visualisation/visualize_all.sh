#!/bin/bash
# Runs simulation on the local machine. This script requires simulation parameters to pass and 
# optional log prefix. This is the prefix of all log files generated by the simulation.
# If this argument is provided, then all possible graphs will be generated for produced
# log files. This argument is usually the same as --simulation-out param.

if [ $# -lt 1 ]; then
  echo "Usage: $0 'log_file_name'"
  exit 1
fi

LOG=$1
LOG_FILE_ORG=`basename ${LOG}`
LOG_DIR="$( cd "$( dirname "${LOG}" )" && pwd )"
EXE_DIR="$( cd "$( dirname "$0" )" && cd .. && pwd )"

(
  cd ${LOG_DIR}
  for LOG_FILE in `ls ${LOG_FILE_ORG}*.log`; do
    POSTLOG="${LOG_DIR}/${LOG_FILE}.postlog"
    echo "Processing ${LOG_DIR}/${LOG_FILE}"
    (
      cd ${EXE_DIR};
      python -m log_parser.parse_experiment_log "${LOG_DIR}/${LOG_FILE}" "${POSTLOG}" &&
      python -m validation.experiment_validator -v single_task "${POSTLOG}" &&
      python -m validation.experiment_validator -v simulation "${POSTLOG}" &&
      python -m validation.experiment_validator -v order "${POSTLOG}" &&
      (
        cd visualisation
        ruby plot_gantt.rb results "${POSTLOG}" "${LOG_DIR}/${LOG_FILE}.results.png"
        ruby plot_gantt.rb workflow "${POSTLOG}" "${LOG_DIR}/${LOG_FILE}.workflow.png"
        ruby plot_gantt.rb storage "${POSTLOG}" "${LOG_DIR}/${LOG_FILE}.storage.png"
        ruby plot_storage.rb number "${POSTLOG}" "${LOG_DIR}/${LOG_FILE}.storage.number.png"
        ruby plot_storage.rb speed "${POSTLOG}" "${LOG_DIR}/${LOG_FILE}.storage.speed.png"
      )
    )
  done;
)

